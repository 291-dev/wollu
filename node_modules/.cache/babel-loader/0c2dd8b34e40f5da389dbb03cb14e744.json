{"ast":null,"code":"/**\n * @license React\n * use-subscription.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function () {\n    'use strict';\n\n    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === 'function') {\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n    }\n    var shim = require('use-sync-external-store/shim');\n\n    //\n    // In order to avoid removing and re-adding subscriptions each time this hook is called,\n    // the parameters passed to this hook should be memoized in some wayâ€“\n    // either by wrapping the entire params object with useMemo()\n    // or by wrapping the individual callbacks with useCallback().\n\n    function useSubscription(_ref) {\n      var getCurrentValue = _ref.getCurrentValue,\n        subscribe = _ref.subscribe;\n      return shim.useSyncExternalStore(subscribe, getCurrentValue);\n    }\n    exports.useSubscription = useSubscription;\n    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === 'function') {\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n    }\n  })();\n}","map":null,"metadata":{},"sourceType":"script"}